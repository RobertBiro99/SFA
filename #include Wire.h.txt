#include <Wire.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <TinyGPS.h>
#include <SoftwareSerial.h>

// Crearea obiectelor pentru senzorii MPU-6050 și GPS
Adafruit_MPU6050 mpu;
TinyGPS gps;
SoftwareSerial ss(3, 4); // RX, TX pentru GPS

void setup() {
  Serial.begin(9600);
  ss.begin(9600);  // Viteza de comunicare GPS

  // Inițializare MPU-6050
  if (!mpu.begin()) {
    Serial.println("Nu am putut găsi un senzor MPU6050. Verificați conexiunile.");
    while (1);
  }
  Serial.println("MPU6050 găsit!");

  // Configurare MPU-6050
  mpu.setAccelerometerRange(MPU6050_RANGE_2_G);
  mpu.setGyroRange(MPU6050_RANGE_250_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);  // Corectare: Folosește MPU6050_BAND_21_HZ

  Serial.println("Inițializare completă!");
}

void loop() {
  // Citirea datelor de la MPU-6050
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  // Citirea datelor GPS
  while (ss.available() > 0) {
    gps.encode(ss.read());  // Procesează datele GPS

    // Obține latitudinea și longitudinea ca valori long
    long lat, lon;
    gps.get_position(&lat, &lon);  // Obține latitudine și longitudine în formă de long

    // Conversie la float
    float latitude = lat / 100000.0;  // Conversie la float cu 6 zecimale
    float longitude = lon / 100000.0; // Conversie la float cu 6 zecimale

    // Afișarea tuturor datelor pe o singură linie
    Serial.print("Acceleratie X: ");
    Serial.print(a.acceleration.x);
    Serial.print(" m/s^2, Y: ");
    Serial.print(a.acceleration.y);
    Serial.print(" m/s^2, Z: ");
    Serial.print(a.acceleration.z);
    Serial.print(" m/s^2, ");
    
    Serial.print("Giroscop X: ");
    Serial.print(g.gyro.x);
    Serial.print(" rad/s, Y: ");
    Serial.print(g.gyro.y);
    Serial.print(" rad/s, Z: ");
    Serial.print(g.gyro.z);
    Serial.print(" rad/s, ");
    
    Serial.print("Temperatura: ");
    Serial.print(temp.temperature);
    Serial.print(" C, ");
    
    Serial.print("Latitudine: ");
    Serial.print(latitude, 6);  // Afișează latitudinea cu 6 zecimale
    Serial.print(", Longitudine: ");
    Serial.println(longitude, 6); // Afișează longitudinea cu 6 zecimale
  }

  delay(500); // Pauză de 500ms pentru actualizarea datelor
}